(function () { "use strict"; function h() { it(); ft(); ut(); c(); $(window).resize(function () { t = $.waypoints("viewportHeight"); $("#overlay").css("margin-top", "0px"); l(); f(); i() }) } function it() { $("#bar").addClass("absolute"); y(); v(); rt(); l(); f(); $("#html5Loader").addClass("hidden"); $("#wrapper").removeClass("hidden"); i(); p() } function rt() { var n = _($("#contact ul.info").attr("class").split(/\s+/)).filter(function (n) { return n.indexOf("ae-animation") !== -1 }); $("#scene3").waypoint({ triggerOnce: !0, offset: function () { return -$(this).height() / 3 }, handler: function () { $("#contact ul.info").addClass("animated"); _(n).each(function (n) { $("#contact ul.info").removeClass(n); $("#contact ul.info").addClass(n) }) } }) } function ut() { $(".scroller").click(function () { var n = $(document).scrollTop(), t = r(n); $.scrollTo(w(t.scene), 800, { axis: "y" }) }) } function c() { $("#bar li a").click(function () { if ($(this).hasClass("current")) return !1; var t = $(this).data("ref"), i = n[t]; return $.scrollTo(i, 800, { axis: "y" }), !1 }) } function l() { var n, i; $("#overlay").height(t); $("#intro").height(t); $("#contact").height(t); $("#scene3").css("min-height", t + "px"); $("#scene3").width() >= 640 ? (n = ($("#scene3").width() - $(".skills").width()) / 2 - 10, $("#scene3 .pills").css("width", n + "px")) : $("#scene3 .pills").css("width", "100%"); i = $("#intro").height() + $("#overlay").height(); $(".scene").css("top", i + "px"); u() } function u() { var i = $("#intro").height() + $("#overlay").height(), r; n.overlay = 0; n.intro = $("#overlay").height(); r = i + _($(".scene")).reduce(function (t, r) { return n[r.id] = t + i, t + $(r).height() }, 0) + $("#contact").height() / 3 * 2; $("body").height(r); n.contact = $(document).height() - t } function ft() { $(document).scroll(function () { f($(document).scrollTop()) }) } function f(n) { _(n).isUndefined() && (n = $(document).scrollTop()); var i = r(n); g = i.scene; et(i); a(i); ot(i); st(i); console.log("[" + t + "]scroll to " + n + ". Overlay position: " + $("#overlay").css("margin-top") + ". Scene0 position: " + $("#intro").css("margin-top") + "- Scene " + i.scene + ". offset: " + i.offset) } function et(t) { $("#overlay").css("margin-top", -t.scroll + "px"); t.scroll > n.scene1 && !$("#intro").hasClass("hidden") && $("#intro").addClass("hidden"); t.scroll <= n.scene1 && $("#intro").hasClass("hidden") && $("#intro").removeClass("hidden") } function a(i) { var o = i.scene, u = "#bar li a[data-ref='" + o + "']", r = "#bar li a.current", f, e; $(u).get(0) !== $(r).get(0) && ($(r).removeClass("current"), $(u).addClass("current")); $(r).length === 0 && $("#bar li a:first").addClass("current"); i.scroll <= n.scene1 && ($("#bar").hasClass("fixed") || $("#bar").css("top") !== n.scene1 + "px") && ($("#bar").removeClass("fixed"), $("#bar").addClass("absolute"), $("#bar").css("top", n.scene1 + "px")); i.scroll > n.scene1 && (!$("#bar").hasClass("fixed") || $("#bar").css("top") !== "0px") && ($("#bar").removeClass("absolute"), $("#bar").addClass("fixed"), $("#bar").css("top", "0px")); i.scroll < n.intro && $("#bar").css("opacity") !== "0px" && $("#bar").css("opacity", "0px"); i.scroll >= n.intro && i.scroll < n.scene1 && (f = t - i.offset, e = 1 - f / t, $("#bar").fadeTo(0, e)) } function ot(t) { var u = parseInt($("#contact").css("top").replace("px", "")), i = n.scene3, r; if (t.scroll >= i && u !== 0) { $("#contact").css("top", "0px"); return } if (t.scroll < i) { r = $("body").height() - t.scroll; $("#contact").css("top", r + "px"); return } } function st(t) { if (o && s && (t.scroll === n.intro || t.scroll === n.overlay)) { var i = "#" + t.scene + " div.progressbar"; _.delay(function () { $.scrollTo(w(t.scene), 800); $(i).removeClass("tn-progress") }, (nt + 1) * 1e3); $(i).addClass("tn-progress") } } function v(n) { n = _(n).isUndefined() ? 0 : n; var i = $("#heros li"), r = i.length, u = Math.min($("#heros ul").width(), $("#heros ul").height()), f = Math.min($("#heros li").width(), $("#heros li").height()), e = u - f, t = e / 2, o = 360 / r * (Math.PI / 180), s = n * (Math.PI / 180); _(i).each(function (n, i) { var r = o * i + s, u = Math.sin(r) * t, f = Math.cos(r) * t; $(n).css("top", -(f - t) + "px"); $(n).css("left", u + t + "px") }) } function y() { $(".skill").knob() } function p() { var n = function () { _($("#scene3 .skill").each(function (n, t) { var r = parseInt($(t).val()), u = $(t).data("rel"), i; r !== u && (i = $(t).data("rel"), $({ value: 0 }).animate({ value: i }, { duration: 2e3, easing: "swing", step: function () { $(t).val(Math.ceil(this.value)).trigger("change") } })) })) }; $(".skills").waypoint({ offset: "100%", handler: n }) } function i() { var n = $("#scene3 .pills"), t; $(n).html(""); _.chain(k).shuffle().each(function (t, i) { $(n.get(i % 2)).append('<span data-weight="1">' + t + "<\/span>") }); t = { size: { grid: 20 }, options: { color: "random-light", printMultiplier: 3 }, font: "Oswald, Dosis, Arial, Tahoma, Verdana, serif", shape: "square" }; n.awesomeCloud(t) } function r(t) { var i = _.chain(n).filter(function (n) { return n <= t }).max(function (n) { return n }).value(), r = _.chain(n).keys().find(function (t) { return n[t] === i }).value(); return { scroll: t, scene: r, offset: t - i } } function w(t) { var i = n[t]; return _.chain(n).filter(function (n) { return n > i }).min().value() } function ht() { return "ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch } function b(n) { for (var t = 0, i = !1; t < n.length; t++) if (navigator.platform === n[t]) { i = !0; break } return i } function e(n, t) { var i = t.originalEvent.touches[0] || t.originalEvent.changedTouches[0]; console.log(n + "+:" + i.pageY + " " + i.pageX) } function ct() { $(".scroller").css("top", "-100px"); $(".scroller").css("cursor", "default"); $(".scroller").removeClass("hidden"); $(".scroller").addClass("scroller-animation"); $(".scroller").addClass("scroller-circle"); v(); $(".fixed").removeClass("fixed"); $("#overlay").css({ height: t + "px", "background-color": "rgba(62,62,62,0.95)" }); $("#copyright").css({ position: "static", "padding-bottom": "10px" }); $("#intro").css("height", t + "px"); $("#bar").css("opacity", "0px"); u(); $(window).resize(function () { t = $.waypoints("viewportHeight"); $("#overlay").css("height", t + "px"); $("#intro").css("height", t + "px"); u(); i() }); $(document).scroll(function () { var i = $(document).scrollTop(), t = r(i); a(t); t.scroll >= n.intro && $("#overlay").hasClass("overlay") && ($("#overlay").removeClass("overlay"), $("#overlay").addClass("hidden")); t.scroll < n.intro && !$("#overlay").hasClass("overlay") && ($("#overlay").addClass("overlay"), $("#overlay").removeClass("hidden")) }); c(); $("#wrapper").removeClass("hidden"); y(); i(); p() } var t = $.waypoints("viewportHeight"), n = {}, d = ht(), o = b(["iPad"]), s = b(["iPhone", "iPod"]), g, nt = 4, k; $(document).ready(function () { $("html").animate({ scrollTop: 0 }, 1); $("body").animate({ scrollTop: 0 }, 1) }); window.addEventListener("load", function tt() { if (window.removeEventListener("load", tt, !1), o || s || d) { ct(); return } h() }, !1); k = ['.NET', 'Agile Methodologies', 'C#', 'Microsoft SQL Server', 'Test Driven Development', 'Scrum', 'Software Development', 'JavaScript', 'Design Patterns', 'WCF', 'Web Services', 'ASP.NET MVC', 'TDD', 'LINQ', 'OOP', 'T-SQL', 'UML', 'WPF', 'Visual Studio', 'XSLT', 'jQuery', 'MongoDB', 'AJAX', 'SOA', 'Entity Framework', 'Software Project Management', 'C++', 'DDD', 'HTML 5', 'CSS3', 'REST', 'Node.js', 'Team Leadership', 'Operations Management', 'Technical Leadership', 'Technical Writing', 'Object Oriented Design', 'Software Engineering', 'Database Design', 'Software Design', 'Start-up Environment', 'Business Planning', 'BDD', 'CQRS', 'Big Data', 'Hadoop', 'Clojure', 'Machine Learning', 'R'] })();
/*
//# sourceMappingURL=default.min.js.map
*/